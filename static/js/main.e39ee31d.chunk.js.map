{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","id","title","completed","cn","TodoList","todos","map","username","findUserById","userId","usersFromServer","find","extendedTodos","App","useState","setTodos","setTitle","selectedUserId","setselectedUserId","titleError","setTitleError","userError","setUserError","action","method","onSubmit","event","preventDefault","trim","prevTodos","maxTodoId","Math","max","newTodo","type","placeholder","value","onChange","target","String","Number","defaultValue","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e39ee31d.chunk.js","sourcesContent":["import { FC } from 'react';\nimport { User } from '../../types/types';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: FC<Props> = (({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n});\n","import cn from 'classnames';\nimport { FC } from 'react';\nimport { UserInfo } from '../UserInfo';\nimport { ToDo } from '../../types/types';\n\ntype Props = {\n  todo: ToDo;\n};\n\nexport const TodoInfo: FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={cn(\n        'TodoInfo',\n        {\n          'TodoInfo--completed': completed,\n        },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && (\n        <UserInfo user={user} />\n      )}\n    </article>\n  );\n};\n","import { TodoInfo } from '../TodoInfo';\nimport { ToDo } from '../../types/types';\n\ntype Props = {\n  todos: ToDo[] | [];\n};\n\nexport const TodoList = ({ todos }: Props) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { useState, ChangeEvent } from 'react';\nimport './App.scss';\n\nimport { TodoList } from './components/TodoList';\nimport { ToDo } from './types/types';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nconst findUserById = (userId:number | null) => {\n  return usersFromServer.find(user => user.id === userId) || null;\n};\n\nconst extendedTodos = todosFromServer.map(todo => ({\n  ...todo,\n  user: findUserById(todo.userId),\n} || null));\n\nexport const App = () => {\n  const [todos, setTodos] = useState<ToDo[]>(extendedTodos);\n  const [title, setTitle] = useState('');\n  const [selectedUserId, setselectedUserId] = useState<number | null>(null);\n\n  const [titleError, setTitleError] = useState('');\n  const [userError, setUserError] = useState('');\n\n  const handleTitleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    if (titleError !== '') {\n      setTitleError('');\n    }\n\n    setTitle(event.target.value);\n  };\n\n  const handleUserChange = (event: ChangeEvent<HTMLSelectElement>) => {\n    if (userError !== '') {\n      setUserError('');\n    }\n\n    setselectedUserId(Number(event.target.value));\n  };\n\n  const handleFormSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (title.trim() === '') {\n      setTitleError('Please enter a title');\n    }\n\n    if (!selectedUserId) {\n      setUserError('Please choose a user');\n    }\n\n    if (!selectedUserId || !title.trim()) {\n      return;\n    }\n\n    setTodos((prevTodos) => {\n      const maxTodoId = Math.max(...prevTodos.map(todo => todo.id));\n\n      const newTodo: ToDo = {\n        id: maxTodoId + 1,\n        title,\n        userId: maxTodoId,\n        completed: false,\n        user: findUserById(selectedUserId),\n      };\n\n      return [\n        ...prevTodos,\n        newTodo,\n      ];\n    });\n\n    setTitle('');\n    setselectedUserId(null);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleFormSubmit}\n      >\n        <div className=\"field\">\n          <label>\n            Title:\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={title}\n              onChange={handleTitleChange}\n            />\n            {titleError && <span className=\"error\">Please enter a title</span>}\n          </label>\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={selectedUserId !== null ? String(selectedUserId) : ''}\n            onChange={handleUserChange}\n            defaultValue=\"\"\n          >\n            <option value=\"\" disabled>\n              Choose a user\n            </option>\n\n            {usersFromServer.map(user => (\n              <option key={user.id} value={user.id}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {userError && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}